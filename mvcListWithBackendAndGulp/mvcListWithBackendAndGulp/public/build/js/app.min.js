!function(){"use strict";class t{constructor(){this.sortingConfig={A:t=>(t.sort((t,e)=>t.email>e.email?1:-1),t),Z:t=>(t.sort((t,e)=>t.email<e.email?1:-1),t),Admin:t=>t.filter(t=>"Admin"==t.role),User:t=>t.filter(t=>"User"==t.role),Find:t=>{let e=new RegExp(event.target.value,"i");return t.filter(t=>e.test(t.name))}}}static initTemplate(t,e){var s=document.querySelector(`#${e}`).content.cloneNode(!0);t.innerHTML="",t.appendChild(s)}static navigateTo(t){window.location.hash=`#${t}`}static isLoggedIn(){return!!JSON.parse(localStorage.getItem("credentials"))}}const e=document.querySelector("#wrapper");let s={"":()=>{t.initTemplate(e,"login-view"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.initListeners()}initListeners(){this.view.DOMElements.logInBtn.addEventListener("click",this.loginHandler.bind(this)),this.view.DOMElements.logOutBtn.addEventListener("click",this.logoutHandler.bind(this))}loginHandler(t){t.preventDefault();let e=this.view.getCredentials();this.model.validate(e)?this.model.login(e).then(t=>{t.loginStatus?(this.view.hideMsg(),this.view.showLogout(),this.utils.navigateTo("gallery")):this.view.showMsg(this.model.getErrorMsg())}):this.view.showMsg(this.model.getErrorMsg())}logoutHandler(){this.view.hideLogout(),this.model.logout(),this.utils.navigateTo("")}}(new class{constructor(){this.loginUrl="http://localhost:3000/login",this.emailPattern=/^\w+@\w+\.\w{2,4}$/i,this.passwordPattern=/^[a-zA-Z0-9]{8,30}$/,this.errorMsg=null,this.errorMsgMap={empty:"Пожалуйста заполните поля логин и пароль",loginError:"Логин введен неверно. Только латинские буквы.",passError:"Пароль введен неверно. Тольк латинские буквы, цифры. Длина не менее 8 символов",missmatch:"Неправильные логин или пароль."}}validate(t){return this.isEmpty(t)&&this.isEmailAssertPattern(t)&&this.isPasswordAssertPattern(t)}login(t){let e={headers:{"Content-type":"application/json; charset=utf-8"},method:"post",body:JSON.stringify(t)};return fetch(this.loginUrl,e).then(t=>t.json()).then(e=>(e.loginStatus?localStorage.setItem("credentials",JSON.stringify(t)):this.setErrorMsg("missmatch"),e))}getErrorMsg(){return this.errorMsg}setErrorMsg(t){return this.errorMsg=this.errorMsgMap[t],!1}isEmpty(t){return t.login&&t.password||this.setErrorMsg("empty")}isEmailAssertPattern(t){return this.emailPattern.test(t.login)||this.setErrorMsg("loginError")}isPasswordAssertPattern(t){return this.passwordPattern.test(t.password)||this.setErrorMsg("passError")}logout(){localStorage.removeItem("credentials")}},new class{constructor(){this.DOMElements={login:document.querySelector("#inputEmail"),password:document.querySelector("#inputPassword"),alert:document.querySelector(".alert"),logInBtn:document.querySelector("#log-in-btn"),logOutBtn:document.querySelector("#log-out-btn")}}showMsg(t){t&&(this.DOMElements.alert.classList.remove("hide"),this.DOMElements.alert.innerHTML=t)}hideMsg(){this.DOMElements.alert.classList.add("hide")}showLogout(){this.DOMElements.logOutBtn.classList.remove("hide")}hideLogout(){this.DOMElements.logOutBtn.classList.add("hide")}getCredentials(){return{login:this.DOMElements.login.value,password:this.DOMElements.password.value}}},t)},gallery:()=>{t.initTemplate(e,"main-view");let s=new class{constructor(){this.events={}}subscribeEvent(t,e){this.events[t]=e}callEvent(t,e){this.events[t]&&this.events[t](e)}};new class{constructor(t,e,s,i){this.model=t,this.view=e,this.observer=s,this.utils=i,this.pageConfig={itemsPerPage:10,currentPage:0},this.init()}initListeners(){this.view.DOMElements.userList.addEventListener("click",this.tableLineHandler.bind(this)),this.view.DOMElements.search.addEventListener("keyup",this.searchHandler.bind(this)),this.view.DOMElements.emailDropdown.addEventListener("click",this.sortingHandler.bind(this)),this.view.DOMElements.roleDropdown.addEventListener("click",this.sortingHandler.bind(this)),this.view.DOMElements.nextBtn.addEventListener("click",this.getNextPageHandler.bind(this))}tableLineHandler(t){t.preventDefault();let e=t.target.getAttribute("data-row-id");e?this.openDetail(e):this.view.selectTableLine(t)}openDetail(t){this.model.getUserById(t).then(t=>{this.view.showSingleUser(t)})}searchHandler(t){t.preventDefault();let e=t.target.value;13===t.keyCode&&(0==e.length||e.length>2)&&(this.pageConfig.currentPage=0,this.view.clearList(),this.view.buildUsersList(this.getNextPage(),this.utils.sortingConfig.Find))}sortingHandler(t){t.preventDefault(),this.view.updateButtonText(t),this.applySortingMethod(this.view.getSortingType(t))}getNextPageHandler(t){t&&t.preventDefault(),this.view.buildUsersList(this.getNextPage()),this.isLastPage()}applySortingMethod(t){t&&(this.pageConfig.currentPage=0,this.view.clearList(),this.view.buildUsersList(this.getNextPage(),this.utils.sortingConfig[t]))}getNextPage(){let t=this.pageConfig.itemsPerPage*this.pageConfig.currentPage,e=this.pageConfig.itemsPerPage+t;return this.pageConfig.currentPage++,this.model.usersListData.slice(t,e)}isLastPage(){this.isMaxPage()&&(this.view.hideNextPage(),this.countStats())}isMaxPage(){return this.pageConfig.currentPage*this.pageConfig.itemsPerPage>=this.model.usersListData.length}countStats(){let t=this.model.usersListData.reduce((t,e)=>("Admin"==e.role?t.admins++:t.users++,t),{admins:0,users:0});this.view.showStats(t)}init(){this.model.getUserList().then(t=>{this.initListeners(),this.view.buildUsersList(this.getNextPage()),this.isLastPage()})}}(new class{constructor(){this.getUrl="http://localhost:3000/usersList",this.usersListData=[]}getUserList(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Data is loaded"),this.usersListData=t,t))}getUserById(t){return fetch(this.getUrl+"/"+t).then(t=>t.json()).then(t=>t)}saveUser(t){}updateUser(t){}},new class{constructor(){this.DOMElements={userList:document.querySelector("#user-list"),selectAll:document.querySelector("#select-all"),statsInfo:document.querySelector("#stats"),emailDropdown:document.querySelector("#dropdown-email"),roleDropdown:document.querySelector("#dropdown-role"),search:document.querySelector("#inputSearch"),nextBtn:document.querySelector("#next-page"),backBtn:document.querySelector("#back-btn"),usersList:document.querySelectorAll(".users-list"),singleUser:document.querySelector(".single-user"),singleUserDetails:document.querySelector("#single-user-details")},this.counter=0,this.DOMElements.selectAll.addEventListener("click",this.selectAllItems.bind(this)),this.DOMElements.backBtn.addEventListener("click",this.hideSingleUser.bind(this))}tableTemplate(t){return`<tr>\n\t\t<th scope="row">\n\t\t  <input type="checkbox">\n\t\t</th>\n\t\t<th scope="row">${t.id}</th>\n\t\t<td>${t.name}</td>\n\t\t<td>${t.username}</td>\n\t\t<td>${t.role}</td>\n\t\t<td>${t.email}</td>\n\t\t<td data-toggle="tooltip" title="${t.address.zipcode}, ${t.address.city}, ${t.address.street}">${t.address.city}</td>\n\t\t<td>${t.website}</td>\n\t\t<td>\n\t\t\t<div class="text-center">\n\t\t\t\t<a href="#" data-row-id="${t.id}" class="btn btn-primary btn-sm">Открыть</a>\n\t  \t\t</div>\n\t  </td>\n\t  </tr>`}singleUserTemplate(t){return`<form class="needs-validation" novalidate="">\n\t\t<div class="row">\n\t\t  <div class="col-md-6 mb-3">\n\t\t\t<label for="firstName">Имя</label>\n\t\t\t<input type="text" class="form-control" value="${t.name}" readonly>\n\t\t  </div>\n\t\t  <div class="col-md-6 mb-3">\n\t\t\t<label for="lastName">Роль</label>\n\t\t\t<input type="text" class="form-control" value="${t.role}" readonly>\n\t\t  </div>\n\t\t</div>\n\t\t<div class="mb-3">\n\t\t  <label for="username">Логин</label>\n\t\t  <div class="input-group">\n\t\t\t<div class="input-group-prepend">\n\t\t\t  <span class="input-group-text">@</span>\n\t\t\t</div>\n\t\t\t<input type="text" class="form-control" value="${t.username}" readonly>\n\t\t  </div>\n\t\t</div>\n\t\t<div class="mb-3">\n\t\t  <label for="email">Email <span class="text-muted">(Опционально)</span></label>\n\t\t  <input type="email" class="form-control" value="${t.email}" readonly>\n\t\t</div>\n\t\t<div class="mb-3">\n\t\t  <label for="address">Адрес</label>\n\t\t  <input type="text" class="form-control" value="${t.address.zipcode}, ${t.address.city}, ${t.address.street}" readonly>\n\t\t</div>\n\t\t<div class="mb-3">\n\t\t  <label for="address2">Сайт</label>\n\t\t  <input type="text" class="form-control" value="${t.website}" readonly>\n\t\t</div>\n\t  </form>`}selectAllItems(){this.DOMElements.userList.querySelectorAll("input[type=checkbox]").forEach(t=>this.DOMElements.selectAll.checked?t.checked=!0:t.checked=!1)}selectTableLine(t){t.currentTarget.querySelectorAll("tr").forEach(t=>t.classList.remove("table-active")),t.target.closest("tr").classList.add("table-active")}clearList(){this.DOMElements.userList.innerHTML="",this.hideNextPage()}updateButtonText(t){t.currentTarget.querySelector("button").innerHTML=t.target.innerText}getSortingType(t){return t.target.getAttribute("sorting-type")}blockNextPage(){this.DOMElements.nextBtn.classList.add("disabled")}hideNextPage(){this.DOMElements.nextBtn.classList.add("hide")}showStats(t){this.DOMElements.statsInfo.innerHTML=`Статистика системы. Админов: ${t.admins}, Пользователей: ${t.users}`}buildUsersList(t,e){e&&(t=e(t));let s=t.map(t=>this.tableTemplate(t));this.DOMElements.userList.innerHTML+=s.join("")}showSingleUser(t){this.DOMElements.usersList.forEach(t=>t.classList.add("hide")),this.DOMElements.singleUser.classList.remove("hide"),this.DOMElements.singleUserDetails.innerHTML=this.singleUserTemplate(t)}hideSingleUser(){this.DOMElements.singleUser.classList.add("hide"),this.DOMElements.usersList.forEach(t=>t.classList.remove("hide"))}},s,new t)},contacts:()=>{t.initTemplate(e,"contact-view"),console.log("Contacts route is loaded")}};function i(){let e=document.location.hash.replace(/^#/,"");e&&!t.isLoggedIn()?t.navigateTo(""):function(t){let e=s[t];e&&e()}(e)}window.addEventListener("load",i),window.addEventListener("hashchange",i)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
